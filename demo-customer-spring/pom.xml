<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
        <relativePath/>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zph0000.demo</groupId>
    <artifactId>demo-customer-spring</artifactId>

    <dependencies>
        <dependency>
            <groupId>com.zph0000.demo</groupId>
            <artifactId>proxy-spring</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.storm</groupId>
            <artifactId>storm-core</artifactId>
            <version>1.1.0</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>log4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>


    <profiles>
        <profile>
            <id>pattern-local</id>
            <properties>
                <profiles.pattern>local</profiles.pattern>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.zph0000.demo</groupId>
                    <artifactId>demo-serverimpl</artifactId>
                    <version>1.0-SNAPSHOT</version>
                </dependency>
            </dependencies>
            <build>
                <finalName>service-customer-spring</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pattern-remote</id>
            <properties>
                <profiles.pattern>remote</profiles.pattern>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.zph0000.demo</groupId>
                    <artifactId>demo-server</artifactId>
                    <version>1.0-SNAPSHOT</version>
                </dependency>
            </dependencies>
            <build>
                <finalName>service-customer-spring</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>pattern-rely</id>
            <properties>
                <profiles.pattern>rely</profiles.pattern>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.zph0000.demo</groupId>
                    <artifactId>demo-serverimpl</artifactId>
                    <version>1.0-SNAPSHOT</version>
                </dependency>
            </dependencies>
            <build>
                <finalName>service-customer-spring</finalName>
                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                        <excludes>
                            <exclude>application-${profiles.env}.properties</exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.polago.maven.plugins</groupId>
                        <artifactId>merge-properties-maven-plugin</artifactId>
                        <version>1.1</version>
                        <executions>
                            <execution>
                                <id>merge-application-env</id>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                    <outputFile>application-${profiles.env}.properties</outputFile>
                                    <resources>
                                        <resource>
                                            <directory>src/main/resources</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>application-${profiles.env}.properties</include>
                                            </includes>
                                        </resource>
                                        <resource>
                                            <directory>../demo-serviceimpl-spring/src/main/resources</directory>
                                            <filtering>true</filtering>
                                            <includes>
                                                <include>application-${profiles.env}.properties</include>
                                            </includes>
                                        </resource>
                                    </resources>

                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!--<plugin>-->
                    <!--<groupId>org.apache.maven.plugins</groupId>-->
                    <!--<artifactId>maven-resources-plugin</artifactId>-->
                    <!--<executions>-->
                    <!--<execution>-->
                    <!--<id>copy-resources</id>-->
                    <!--&lt;!&ndash; 在default生命周期的 validate阶段就执行resources插件的copy-resources目标 &ndash;&gt;-->
                    <!--<phase>validate</phase>-->
                    <!--<goals>-->
                    <!--<goal>copy-resources</goal>-->
                    <!--</goals>-->
                    <!--<configuration>-->
                    <!--&lt;!&ndash; 指定resources插件处理资源文件到哪个目录下 &ndash;&gt;-->
                    <!--<outputDirectory>${project.build.outputDirectory}</outputDirectory>-->
                    <!--&lt;!&ndash;  也可以用下面这样的方式（指定相对url的方式指定outputDirectory）-->
                    <!--<outputDirectory>target/classes</outputDirectory>-->
                    <!--&ndash;&gt;-->
                    <!--&lt;!&ndash; 待处理的资源定义 &ndash;&gt;-->
                    <!--<resources>-->
                    <!--<resource>-->
                    <!--&lt;!&ndash; 指定resources插件处理哪个目录下的资源文件 &ndash;&gt;-->
                    <!--<directory>../demo-serviceimpl-spring/src/main/resources</directory>-->
                    <!--&lt;!&ndash; 指定不需要处理的资源-->
                    <!--<excludes>-->
                    <!--<exclude>WEB-INF/*.*</exclude>-->
                    <!--</excludes>-->
                    <!--&ndash;&gt;-->
                    <!--&lt;!&ndash; 是否对待处理的资源开启过滤模式 (resources插件的copy-resources目标也有资源过滤的功能，这里配置的-->
                    <!--这个功能的效果跟<build><resources><resource>下配置的资源过滤是一样的，只不过可能执行的阶段不一样，-->
                    <!--这里执行的阶段是插件指定的validate阶段，<build><resources><resource>下的配置将是在resources插件的resources目标执行时起作用（在process-resources阶段）)&ndash;&gt;-->
                    <!--<filtering>false</filtering>-->
                    <!--</resource>-->
                    <!--</resources>-->
                    <!--</configuration>-->
                    <!--</execution>-->
                    <!--</executions>-->

                    <!--</plugin>-->
                </plugins>
            </build>
        </profile>

        <profile>
            <id>env-dev</id>
            <properties>
                <profiles.env>dev</profiles.env>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>env-test</id>
            <properties>
                <profiles.env>test</profiles.env>
            </properties>
        </profile>
        <profile>
            <id>env-prod</id>
            <properties>
                <profiles.env>prod</profiles.env>
            </properties>
        </profile>
    </profiles>


</project>